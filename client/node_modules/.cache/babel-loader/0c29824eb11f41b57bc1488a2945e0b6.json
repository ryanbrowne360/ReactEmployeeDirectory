{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Super Dad\\\\Desktop\\\\Code_Bootcamp\\\\reactapp\\\\src\\\\components\\\\SearchForm\\\\index.js\";\nimport React from \"react\";\nimport \"./style.css\"; // Using the datalist element we can create autofill suggestions based on the props.breeds array\n\nfunction SearchForm(props) {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"search\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"breed\",\n        children: \"Breed Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: props.search,\n        onChange: props.handleInputChange,\n        name: \"breed\",\n        list: \"breeds\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Type in a dog breed to begin\",\n        id: \"breed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"breeds\",\n        children: props.breeds.map(breed => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: breed\n        }, breed, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: props.handleFormSubmit,\n        className: \"btn btn-success\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SearchForm;\nexport default SearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["C:/Users/Super Dad/Desktop/Code_Bootcamp/reactapp/src/components/SearchForm/index.js"],"names":["React","SearchForm","props","search","handleInputChange","breeds","map","breed","handleFormSubmit"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,sBACE;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAEA,KAAK,CAACC,MADf;AAEE,QAAA,QAAQ,EAAED,KAAK,CAACE,iBAFlB;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,SAAS,EAAC,cANZ;AAOE,QAAA,WAAW,EAAC,8BAPd;AAQE,QAAA,EAAE,EAAC;AARL;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA,kBACGF,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiBC,KAAK,iBACrB;AAAQ,UAAA,KAAK,EAAEA;AAAf,WAA2BA,KAA3B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAZF,eAiBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEL,KAAK,CAACM,gBAArC;AAAuD,QAAA,SAAS,EAAC,iBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;KA1BQP,U;AA4BT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"breed\">Breed Name:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"breed\"\n          list=\"breeds\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type in a dog breed to begin\"\n          id=\"breed\"\n        />\n        <datalist id=\"breeds\">\n          {props.breeds.map(breed => (\n            <option value={breed} key={breed} />\n          ))}\n        </datalist>\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n"]},"metadata":{},"sourceType":"module"}